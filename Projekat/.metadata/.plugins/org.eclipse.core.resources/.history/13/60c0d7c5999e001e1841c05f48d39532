package ru210540d;

import java.awt.*;
import java.io.IOException;
import java.net.SocketException;

import org.snmp4j.CommunityTarget;
import org.snmp4j.Snmp;
import org.snmp4j.TransportMapping;
import org.snmp4j.event.ResponseEvent;
import org.snmp4j.mp.MPv3;
import org.snmp4j.mp.SnmpConstants;
import org.snmp4j.security.SecurityModels;
import org.snmp4j.security.SecurityProtocols;
import org.snmp4j.security.USM;
import org.snmp4j.smi.Address;
import org.snmp4j.smi.GenericAddress;
import org.snmp4j.smi.OctetString;
import org.snmp4j.smi.UdpAddress;
import org.snmp4j.transport.DefaultUdpTransportMapping;

import javax.swing.JFrame;

import org.snmp4j.*;
import org.snmp4j.smi.*;
import org.snmp4j.util.*;

import java.util.List;

public class V4 extends JFrame {
	
	//нпр. стабло за BGP које почиње OID-ом .1.3.6.1.2.1.15,
	
	public static String comm="si2019";
	
	public static String r1="192.168.10.1";
	public static String r2="192.168.20.1";
	public static String r3="192.168.30.1";
	
	public static int port = 161;
	public static int l_port = 1620;
	
	OID bgpOID = new OID("1.3.6.1.2.1.15");
	
	Snmp snmp=null;
	
	public V4() throws IOException {
		
		Address targetAddress = GenericAddress.parse("udp:192.168.10.1/161");
		TransportMapping transport=null;
		try {-
			transport = new DefaultUdpTransportMapping();
			snmp = new Snmp(transport);
			transport.listen();
		} catch (SocketException e) {
			e.printStackTrace();
		}
		
		
		
		
	
		
		setSize(200,200);
		Button b = new Button("b");
		
		add(b);
	}
}
