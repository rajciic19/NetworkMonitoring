tabs=4,5,6,28,40
options.syn.p=
options.des.p=Dump sent and received packets as hex string.
options.syn.h=windowSize
options.des.h=Set the window height in rows. If the value is greater than zero, every windowSize rows the user is prompted to continue output. Default is zero.
options.syn.a=authProtocol
options.des.a=Set the authentication protocol used to authenticate SNMPv3 messages. Valid values are MD5 and SHA, SHA224, SHA256, SHA384, and SHA512.
options.syn.A=authPassphrase
options.des.A=Set the authentication pass phrase for authenticated SNMPv3 messages.
options.syn.b=bindAddress
options.des.b=Set local interface and port to use for outgoing SNMP messages. By default this is 0.0.0.0/0 (host chosen port on all local IPv4 addresses).
options.syn.bc=engineBootCount
options.des.bc=Set the engine boot count to the specified value greater or equal to zero. Default is zero.
options.syn.c=community
options.des.c=Set the community for SNMPv1/v2c messages.
options.syn.f=1|2|3|4
options.des.f=Set the OID output format, where 1 = numeric, 2 = last name and numeric index, 3 = last name and formatted index without quoting, and 4 = last name and formatted index including hex-formatting of non-printable strings. The default is 4.
options.syn.Cil=lowerBoundIndex
options.des.Cil=Set the lower bound index for TABLE operations.
options.syn.Ciu=upperBoundIndex
options.des.Ciu=Set the upper bound index for TABLE operations.
options.syn.Cl=
options.des.Cl=Left justify all cells when printing a table.
options.syn.Cn=non-repeaters
options.des.Cn=Set the non-repeaters field for GETBULK PDUs. It specifies the number of supplied variables that should not be iterated over. The default is 0.
options.syn.Cr=max-repetitions
options.des.Cr=Set the max-repetitions field for GETBULK PDUs. This specifies the maximum number of iterations over the repeating variables. The default is 10.
options.syn.rsl=low|basic|secure
options.des.rsl=Set the security level strategy for auto-responses to REPORT PDUs The default is 'low' for better error handling. Use 'secure' for max. security (i.e. never send noAuthNoPriv). The basic level is conforming to RFC 3412 and 3414 allowing 'noAuthNoPriv' for engine ID discovery and wrong username reports.
options.syn.Cw=
options.des.Cw=Specify the line width when printing tables
options.syn.d=debugLevel
options.des.d=Set the global debug level for Log4J logging output. Valid values are OFF, ERROR, WARN, INFO, and DEBUG.
options.syn.Dn=
options.des.Dn=Do not use any default option values stored in config.
options.syn.dtls-version=dtlsVersion
options.des.dtls-version=Specifies the DTLS version to use. Possible values are DTLSv1.0 and DTLSv1.2 (default).
options.syn.e=engineID
options.des.e=Set the authoritative engine ID of the command responder used for SNMPv3 request messages. If not supplied, the engine ID will be discovered.
options.syn.E=contextEngineID
options.des.E=Set the context engine ID used for the SNMPv3 scoped PDU. The authoritative engine ID will be used for the context engine ID, if the latter is not specified.
options.syn.l=localEngineID
options.des.l=Set the local engine ID of the command generator and the notification receiver used for SNMPv3 request messages. This option can be used to avoid engine ID clashes through duplicate IDs leading to usmStatsNotInTimeWindows reports.
options.syn.n=contextName
options.des.n=Set the target context name for SNMPv3 messages. Default is the empty string.
options.syn.Ors=maxSizeRespPDU
options.des.Ors=The maximum size of the response PDU in bytes.
#options.syn.Ocs=file
#options.des.0cs=Write the retrieved values of a 'walk' command as a serialized ArrayList of VariableBinding instances to the specified file. The snapshot format can be read later by other applications, for example MIB Explorer Pro 2.2 or later. See also -Ods.
#options.syn.Ods=file
#options.des.Ods=Read the snapshot file and dumps its contents on standard out. No SNMP operation will be done. See also -Ocs.
options.syn.y=privacyProtocol
options.des.y=Set the privacy protocol to be used to encrypt SNMPv3 messages. Valid values are DES, AES (AES128), AES192, AES256, AES192p, AES256p, and 3DES(DESEDE). The AES protocols that end with 'p' (for proprietary) are using a non-standardized key extension algorithm from 3DES.
options.syn.Y=privacyPassphrase
options.des.Y=Set the privacy pass phrase for encrypted SNMPv3 messages.
options.syn.r=retries
options.des.r=Set the number of retries used for requests. A zero value will send out a request exactly once. Default is 1.
options.syn.t=timeout
options.des.t=Set the timeout in milliseconds between retries. Default is 1000 milliseconds.
options.syn.u=securityName
options.des.u=Set the security name for authenticated v3 messages.
options.syn.v=1|2c|3
options.des.v=Set the SNMP protocol version to be used. Default is 3.
options.syn.Ta=agentAddress
options.des.Ta=Set the agent address field of a V1TRAP PDU. The default value is '0.0.0.0'.
options.syn.Te enterpriseOID
options.des.Te=Set the enterprise OID field of a V1TRAP PDU.
options.syn.Tg=genericID
options.des.Tg=Set the generic ID for SNMPv1 TRAPs (V1TRAP). The default is 0 (coldStart).
options.syn.To=trapOID
options.des.To=Sets the trapOID (1.3.6.1.6.3.1.1.4.1.0) of an INFORM or TRAP PDU. The default is 1.3.6.1.6.3.1.1.5.1.
options.syn.Ts=specificID
options.des.Ts=Set the specific ID for V1TRAP PDU. The default is 0.
options.syn.Tu=upTime
options.des.Tu=Set the sysUpTime field of an INFORM, TRAP, or V1TRAP PDU.
options.syn.Ci=
options.des.Ci=Prepend the index for each printed row.
options.syn.Cc=columnWidth
options.des.Cc=Print table columns with specified character width.
options.syn.Cf=columnSeparator
options.des.Cf=Separate table columns with the specified separator string. The table is printed in compact form. By default columns are separated by spaces and aligned.
options.syn.Ch=
options.des.Ch=Display only column headers.
options.syn.OtCSV=
options.des.OtCSV=For each SNMP row received exactly one row of comma separated values will printed to the console where the first column contains the row index.
options.syn.Otd=
options.des.Otd=Activates dense table operation mode which improves table retrieval performance on regular (dense) tables. This option must not be used with sparse tables.
options.syn.OttCSV=
options.des.OttCSV=Same as -OtCSV except that each row's first column will report the current time (millis after 1.1.1970) when the request has been sent.
options.syn.w=consoleWidth
options.des.w=Specifies the width of the console output, default is 80 characters.
options.syn.s=
options.des.s=Suppress any output on stderr (silent mode).
options.syn.ilo=
options.des.ilo=Do not check for lexicographic ordering errors while walking a subtree. Using this option may cause endless looping if an agent does not implement lexicographic ordering correctly!
options.syn.CE=usmUserTableEngineID
options.des.CE=Set usmUserTableEngineID to be used as part of the index of the usmUserTable. Default is to use the authoritative engine ID (set via -e or probed) as the usmUserTableEngineID.
options.syn.createAndWait=
options.des.createAndWait=Use the createAndWait(5) RowStatus to create new rows instead of createAndGo(4) which might not be supported on certain devices.
options.syn.tls-local-id=certAlias
options.des.tls-local-id=The local certificate alias identity which selects a certificate chain from the local key store. Only the selected certificate chain will be presented to the remote SNMP engine. Use this option with the "tls:" or "dtls:" transport domain.
options.syn.tls-peer-id=subjectDN
options.des.tls-peer-id=The subject DN (e.g., "EMAILADDRESS=email@host.com, C=US, CN=My Name") of the trusted certificate presented by the remote SNMP engine ID. Use this option with the "tls:" or "dtls:" transport domain.
options.syn.tls-trust-ca=issuerDN
options.des.tls-trust-ca=The issuer DN (e.g., "Company Name CA") of a trusted certification authority (CA) presented by the remote SNMP engine ID for TLS and DTLS.
options.syn.tls-version=tlsVersion
options.des.tls-version=The TLS version to use with the 'tls:' transport protocol. Currently only 'TLSv1', 'TLSv1.1', and 'TLSv1.2' are supported with Java 7 or later. 'TLSv1' is the default which is supported with Java 6 too.
options.syn.Djavax.net.ssl.keyStore=keyStoreFile
options.des.Djavax.net.ssl.keyStore=The key store file with SSL keys for the TLS protocol.
options.syn.Djavax.net.ssl.keyStorePassword=keyStorePassword
options.des.Djavax.net.ssl.keyStorePassword=The password for the key store file with SSL keys for TLS.
options.syn.Djavax.net.ssl.trustStore=keyStoreFile
options.des.Djavax.net.ssl.trustStore=The trust store file with trusted (public) SSL keys for the TLS protocol.
options.syn.Djavax.net.ssl.trustStorePassword=keyStorePassword
options.des.Djavax.net.ssl.trustStorePassword=The password for the trust store file.
command.syn.help=help [command]|all
command.des.help=Display this message and then exits the application. If command is specified then specific help on that command is displayed. By specifying 'all' as [command] a description for each command is displayed.
command.des.trap=Send a TRAP/NOTIFICATION to the SNMP agent at <address> with the specified instance <OID>s and <value>s.\
The <value> for an <OID> is specified by using the following form: <OID>={<type>}<value> where <type> is one of the following single characters enclosed by '{' and '}':\n\
i\tInteger32\n\
u\tUnsignedInteger32, Gauge32\n\
s\tOCTET STRING\n\
x\tOCTET STRING\tspecified as hex string with bytes separated by ':'.\n\
d\tOCTET STRING\tspecified as decimal string with bytes separated by '.'.\n\
n\tNull\n\
o\tOBJECT IDENTIFIER\n\
t\tTimeTicks\n\
a\tIpAddress\n\
b\tOCTET STRING\tspecified as binary string with bytes separated by spaces.\n
command.syn.trap=[-To <notificationID>] trap <address> <OID>={<type>}<value> [..]
command.des.v1trap=Sends a TRAP/NOTIFICATION to the SNMP agent at <address> with the specified instance <OID>s and <value>s.\
The <value> for an <OID> is specified by using the following form: <OID>={<type>}<value> where <type> is one of the following single characters enclosed by '{' and '}':\n\
i\tInteger32\n\
u\tUnsignedInteger32, Gauge32\n\
s\tOCTET STRING\n\
x\tOCTET STRING\tspecified as hex string with bytes separated by ':'.\n\
d\tOCTET STRING\tspecified as decimal string with bytes separated by '.'.\n\
n\tNull\n\
o\tOBJECT IDENTIFIER\n\
t\tTimeTicks\n\
a\tIpAddress\n\
b\tOCTET STRING\tspecified as binary string with bytes separated by spaces.\n
command.syn.v1trap=-Te eid -Ts sid -Tg gid -Ta addr v1trap <address> <OID>={<type>}<value> [..]
command.syn.get=get <address> <OID> [..]
command.des.get=Get one or more object values from the SNMP agent at <address> with the specified instance <OID>.
command.syn.getnext=getnext <address> <OID> [..]
command.des.getnext=Get one or more object values from the SNMP agent at <address> with an instance OID lexicographic following the specifed <OID> in the accessible MIB view.
command.syn.getbulk=[-Cr <repeaters>] [-Cn <non-repeaters>] getbulk <address> <OID> [..]
command.des.getbulk=Send a SNMP GETBULK message to <address>. The options -Cr and -Cn are GETBULK specific - defaults are 10 and 0 respectively.
command.syn.set=set <address> <OID>={<type>}<value> [..]
command.des.set=Set one or more object values in the SNMP agent at <address> with the specified instance <OID>, <type> and <value>s. Type is one of i,u,s,x,d which selects how <value> is being parsed and which SNMP (SMI) type is being send to the agent.\n\
The <value> for an <OID> is specified by using the following form: <OID>={<type>}<value> where <type> is one of the following single characters enclosed by '{' and '}':\n\
i\tInteger32\n\
u\tUnsignedInteger32, Gauge32\n\
s\tOCTET STRING\n\
x\tOCTET STRING\tspecified as hex string with bytes separated by ':'.\n\
d\tOCTET STRING\tspecified as decimal string with bytes separated by '.'.\n\
n\tNull\n\
o\tOBJECT IDENTIFIER\n\
t\tTimeTicks\n\
a\tIpAddress\n\
b\tOCTET STRING\tspecified as binary string with bytes separated by spaces.\n
command.exa.set=To set sysName to 'SNMP4J' use:\n\
SnmpCommand -c private -v 2c -o SET udp:localhost/161 "1.3.6.1.2.1.1.5.0={s}SNMP4J"\n
command.syn.inform=inform <address> <OID>={<type>}<value> [..]
command.des.inform=Send an INFORM request with one or more object values to the SNMP agent at <address> with the specified instance <OID>, <type> and <value>s. Type is one of i,u,s,x,d which selects how <value> is being parsed and which SNMP (SMI) type is being send to the agent.\n\
The <value> for an <OID> is specified by using the following form: <OID>={<type>}<value> where <type> is one of the following single characters enclosed by '{' and '}':\n\
i\tInteger32\n\
u\tUnsignedInteger32, Gauge32\n\
s\tOCTET STRING\n\
x\tOCTET STRING\tspecified as hex string with bytes separated by ':'.\n\
d\tOCTET STRING\tspecified as decimal string with bytes separated by dots ('.').\n\
n\tNull\n\
o\tOBJECT IDENTIFIER\n\
t\tTimeTicks\n\
a\tIpAddress\n\
b\tOCTET STRING\tspecified as binary string with bytes separated by spaces.\n
command.syn.table=table <address> <OID> [..]
command.des.table=Receives tabular data from the column OIDs specified as parameters. The retrieved rows will be dumped to the console (STDOUT) ordered by their index values.
command.exa.table=Retrieve rows of the columnar objects ifDescr to ifInOctets and ifOutOctets:\
SnmpCommand -c public -v 2c -Ot ifDescr#ifInOctets 1.3.6.1.2.1.2.2.1.16
command.syn.walk=walk <address> <OID>
command.des.walk=The walk operation mode uses GETNEXT or GETBULK PDUs to retrieve a MIB subtree with the specified root OID.
command.syn.dump-snapshot=dump-snapshot <file>
command.des.dump-snapshot=Dumps the contents of the snapshot <file> to STDOUT.
command.syn.create-snapshot=create-snapshot <file> <address> <OID>
command.des.create-snapshot=Creates a snapshot <file> by walking the subtree specified by <OID> at the agent at <address>.
command.exa.create-snapshot=SnmpCommand -v 2c -c public create-snapshot /tmp/mibdump.sf 127.0.0.1/161 1.3.6
command.syn.listen=listen <address>
command.des.listen=Listen for incoming traps, notifications, and inform requests a dumps their content to STDOUT.
command.syn.version=version
command.des.version=Display version information and then exits.
command.syn.example=example <command>
command.des.example=Display the help for a command including usage example (if available).
command.exa.example=To get examples for SET command usage options use:\
SnmpCommand example set
usage.text=SNMP4J SnmpCommand, version {0} - Copyright © 2004-2019, Frank Fock\n\
Type ''java -jar snmp4j.jar help <command>'' for help on a specific command.\n\
Type ''java -jar snmp4j.jar example <command>'' for examples on a specific command.\n\
Type ''java -jar snmp4j.jar version'' to see the program version.\n\
\n\
Most commands take agent address and OID list arguments. A list of the\n\
available options for each command is listed after the command description.\n\
The description of all options follows the command list.\n\
\n\
Standard parameter formats are:\n\n\
<OID>:     An object identifier is either a dotted notation like ''1.3.6.1.2.2.1.0''.\n\
<address>: [upd:|tcp:|tls:|dtls:]<host>[/<port>]\n\
Host is either an IP address or hostname and port is the SNMP port\n\
of the target SNMP entity.\n\n
